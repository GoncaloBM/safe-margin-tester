{"ast":null,"code":"var _jsxFileName = \"/Users/GoncaloMira1/App/Contrast/contrast/src/components/ColorPicker.jsx\";\nimport React, { useState } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport \"./ColorPicker.css\";\nimport useEventListener from \"./../use-event-listener\";\nimport { rgbToHex } from \"./RGBtoHex\";\nexport const ColorPicker = ({\n  defineColor,\n  text,\n  defineButton,\n  button\n}) => {\n  const [visiblePallete, setVisiblePallete] = useState(false);\n  const [backgroundColor, setBackgroundColor] = useState(\"#fff\");\n  const [rgbColor, setRgbColor] = useState({\n    choose: 0\n  });\n\n  const keyboardChoser = e => {\n    e.preventDefault();\n\n    if (e.keyCode === 13) {\n      setRgbColor({ ...rgbColor,\n        choose: rgbColor.choose + 1\n      });\n    }\n\n    if (rgbColor.choose === 1) {\n      if (e.keyCode === 38) {\n        setRgbColor({ ...rgbColor,\n          r: rgbColor.r + 1,\n          g: rgbColor.g,\n          b: rgbColor.b\n        });\n      } else if (e.keyCode === 40) {\n        setRgbColor({ ...rgbColor,\n          r: rgbColor.r - 1,\n          g: rgbColor.g,\n          b: rgbColor.b\n        });\n      }\n    }\n\n    if (rgbColor.choose === 2) {\n      if (e.keyCode === 38) {\n        setRgbColor({ ...rgbColor,\n          r: rgbColor.r,\n          g: rgbColor.g + 1,\n          b: rgbColor.b\n        });\n      } else if (e.keyCode === 40) {\n        setRgbColor({ ...rgbColor,\n          r: rgbColor.r,\n          g: rgbColor.g - 1,\n          b: rgbColor.b\n        });\n      }\n    }\n\n    if (rgbColor.choose === 3) {\n      if (e.keyCode === 38) {\n        setRgbColor({ ...rgbColor,\n          r: rgbColor.r,\n          g: rgbColor.g,\n          b: rgbColor.b + 1\n        });\n      } else if (e.keyCode === 40) {\n        setRgbColor({ ...rgbColor,\n          r: rgbColor.r,\n          g: rgbColor.g,\n          b: rgbColor.b - 1\n        });\n      }\n    }\n\n    setBackgroundColor(rgbToHex(rgbColor.r, rgbColor.g, rgbColor.b));\n    defineColor(rgbToHex(rgbColor.r, rgbColor.g, rgbColor.b));\n  };\n\n  const handleChangeComplete = color => {\n    setRgbColor({ ...rgbColor,\n      choose: 0,\n      r: color.rgb.r,\n      g: color.rgb.g,\n      b: color.rgb.b\n    });\n    setBackgroundColor(color.hex);\n    defineColor(color.hex);\n  };\n\n  const click = () => {\n    setVisiblePallete(!visiblePallete);\n    defineButton(button);\n  };\n\n  const openWithKeyboard = (e, button) => {\n    e.preventDefault();\n\n    if (e.keyCode === 37 && button === \"hey\") {\n      setVisiblePallete(!visiblePallete);\n      defineButton(button);\n    }\n\n    alert('hey');\n  };\n\n  useEventListener(\"keydown\", keyboardChoser);\n  useEventListener(\"keydown\", openWithKeyboard);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"color-picker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: click,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, text), visiblePallete && /*#__PURE__*/React.createElement(SketchPicker, {\n    color: backgroundColor,\n    onChangeComplete: handleChangeComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/GoncaloMira1/App/Contrast/contrast/src/components/ColorPicker.jsx"],"names":["React","useState","SketchPicker","useEventListener","rgbToHex","ColorPicker","defineColor","text","defineButton","button","visiblePallete","setVisiblePallete","backgroundColor","setBackgroundColor","rgbColor","setRgbColor","choose","keyboardChoser","e","preventDefault","keyCode","r","g","b","handleChangeComplete","color","rgb","hex","click","openWithKeyboard","alert"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport \"./ColorPicker.css\";\nimport useEventListener from \"./../use-event-listener\";\nimport { rgbToHex } from \"./RGBtoHex\";\n\nexport const ColorPicker = ({ defineColor, text, defineButton, button }) => {\n  const [visiblePallete, setVisiblePallete] = useState(false);\n  const [backgroundColor, setBackgroundColor] = useState(\"#fff\");\n  const [rgbColor, setRgbColor] = useState({\n    choose: 0,\n  });\n\n  const keyboardChoser = (e) => {\n    e.preventDefault();\n    if (e.keyCode === 13) {\n      setRgbColor({\n        ...rgbColor,\n        choose: rgbColor.choose + 1,\n      });\n    }\n\n    if (rgbColor.choose === 1) {\n      if (e.keyCode === 38) {\n        setRgbColor({\n          ...rgbColor,\n          r: rgbColor.r + 1,\n          g: rgbColor.g,\n          b: rgbColor.b,\n        });\n      } else if (e.keyCode === 40) {\n        setRgbColor({\n          ...rgbColor,\n          r: rgbColor.r - 1,\n          g: rgbColor.g,\n          b: rgbColor.b,\n        });\n      }\n    }\n\n    if (rgbColor.choose === 2) {\n      if (e.keyCode === 38) {\n        setRgbColor({\n          ...rgbColor,\n          r: rgbColor.r,\n          g: rgbColor.g + 1,\n          b: rgbColor.b,\n        });\n      } else if (e.keyCode === 40) {\n        setRgbColor({\n          ...rgbColor,\n          r: rgbColor.r,\n          g: rgbColor.g - 1,\n          b: rgbColor.b,\n        });\n      }\n    }\n\n    if (rgbColor.choose === 3) {\n      if (e.keyCode === 38) {\n        setRgbColor({\n          ...rgbColor,\n          r: rgbColor.r,\n          g: rgbColor.g,\n          b: rgbColor.b + 1,\n        });\n      } else if (e.keyCode === 40) {\n        setRgbColor({\n          ...rgbColor,\n          r: rgbColor.r,\n          g: rgbColor.g,\n          b: rgbColor.b - 1,\n        });\n      }\n    }\n\n    setBackgroundColor(rgbToHex(rgbColor.r, rgbColor.g, rgbColor.b));\n    defineColor(rgbToHex(rgbColor.r, rgbColor.g, rgbColor.b));\n  };\n\n  const handleChangeComplete = (color) => {\n    setRgbColor({\n      ...rgbColor,\n      choose: 0,\n      r: color.rgb.r,\n      g: color.rgb.g,\n      b: color.rgb.b,\n    });\n    setBackgroundColor(color.hex);\n    defineColor(color.hex);\n  };\n\n  const click = () => {\n    setVisiblePallete(!visiblePallete);\n    defineButton(button);\n  };\n\n  const openWithKeyboard = (e, button) => {\n    e.preventDefault();\n\n    if (e.keyCode === 37 && button === \"hey\") {\n      setVisiblePallete(!visiblePallete);\n      defineButton(button);\n    }\n    alert('hey')\n  };\n\n  useEventListener(\"keydown\", keyboardChoser);\n  useEventListener(\"keydown\", openWithKeyboard);\n  return (\n    <div className=\"color-picker\">\n      <button onClick={click}>{text}</button>\n      {visiblePallete && (\n        <SketchPicker\n          color={backgroundColor}\n          onChangeComplete={handleChangeComplete}\n        />\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}