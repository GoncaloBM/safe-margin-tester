{"ast":null,"code":"var _jsxFileName = \"/Users/GoncaloMira1/App/Contrast/contrast/src/App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"./Board.css\";\nimport { ColorPicker } from \"./components/ColorPicker\";\nimport { Board } from \"./components/Board\";\nimport useEventListener from \"./use-event-listener\";\n\nfunction App() {\n  const [boardColor, setBoardColor] = useState(\"#ffffff\");\n  const [textColor, setTextColor] = useState(\"#000000\");\n  const [buttonType, setButtonType] = useState(\"\");\n  const [textOfColor, setTextOfColor] = useState(\"Press right arrow to change board color and left arrow to change text color\");\n  const [changingColor, setChangingColor] = useState(false);\n  const [safeZoneVisible, setSafeZoneVisible] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [colorType, setColorType] = useState(\"\");\n  const [DisableInfo, setDisableInfo] = useState(false);\n\n  const showDisableInfo = trueOrFalse => {\n    setDisableInfo(trueOrFalse);\n  };\n\n  const disableMenuOff = e => {\n    if (DisableInfo && e.keyCode === 13) {\n      setDisableInfo(false);\n    }\n  };\n\n  const defineVisiblePalete = () => {\n    setVisible(!visible);\n  };\n\n  const defineBoardColor = color => {\n    if (buttonType === \"board\") {\n      setBoardColor(color);\n    }\n  };\n\n  const defineTextColor = color => {\n    if (buttonType === \"text\") {\n      setTextColor(color);\n    }\n  };\n\n  const defineButton = button => {\n    setButtonType(button);\n  };\n\n  const instructions = rgbType => {\n    // alert(`hey ${buttonType}`)\n    if (rgbType === 0) {\n      setTextOfColor(\"Press right arrow to change board color and left arrow to change text color\");\n    } else if (rgbType === 1) {\n      setTextOfColor(\"Changing red, press Enter to finnish that color\");\n      setColorType(\"red\");\n    } else if (rgbType === 2) {\n      setTextOfColor(\"Changing green, press Enter to finnish that color\");\n      setColorType(\"green\");\n    } else if (rgbType === 3) {\n      setTextOfColor(\"Changing blue, press Enter to finnish that color\");\n      setColorType(\"blue\");\n    }\n  };\n\n  const changeColor = () => {\n    setChangingColor(!changingColor);\n  };\n\n  const showingSafeZone = e => {\n    // if click on space it will show safeZone area\n    if (e.keyCode === 32) {\n      setSafeZoneVisible(!safeZoneVisible);\n    }\n  };\n\n  useEventListener(\"keydown\", showingSafeZone);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Board, {\n    boardColor: boardColor,\n    textColor: textColor,\n    safeZoneVisible: safeZoneVisible,\n    showingDisableInfo: DisableInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ActionMenu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hexaTab-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"Keys:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"Space: Enable/disable Safe Margin\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Right Arrow: Enable/disable Board Color\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Left Arrow: Enable/disable Text Color\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Up/Down Arrow: Run through RGB color\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"+ / - : Increase/Decrease Font Size\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"Shift: Enable/disable Peacock Font\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ActionButton\",\n    style: {\n      marginTop: !visible && \"75%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pickerstyle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ColorPicker // className=\"button\"\n  , {\n    text: \"Board\",\n    defineColor: defineBoardColor,\n    button: \"board\",\n    defineButton: defineButton,\n    buttonType: buttonType,\n    initialColor: boardColor,\n    instructions: instructions,\n    changeColor: changeColor,\n    changingColor: changingColor,\n    defineVisiblePalete: defineVisiblePalete,\n    showDisableInfo: showDisableInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left\",\n    style: {\n      marginTop: visible && \"35%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pickerstyle\",\n    style: {\n      marginTop: visible && \"35%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ColorPicker, {\n    text: \"Text\",\n    defineColor: defineTextColor,\n    button: \"text\",\n    defineButton: defineButton,\n    buttonType: buttonType,\n    initialColor: textColor,\n    instructions: instructions,\n    changeColor: changeColor,\n    changingColor: changingColor,\n    defineVisiblePalete: defineVisiblePalete,\n    showDisableInfo: showDisableInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"down\",\n    style: {\n      top: visible && \"4%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hexaTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"aligntext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, textOfColor), buttonType && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"hexadecimal\",\n    style: {\n      color: colorType\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, buttonType === \"board\" ? boardColor : textColor)))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/GoncaloMira1/App/Contrast/contrast/src/App.js"],"names":["React","useState","ColorPicker","Board","useEventListener","App","boardColor","setBoardColor","textColor","setTextColor","buttonType","setButtonType","textOfColor","setTextOfColor","changingColor","setChangingColor","safeZoneVisible","setSafeZoneVisible","visible","setVisible","colorType","setColorType","DisableInfo","setDisableInfo","showDisableInfo","trueOrFalse","disableMenuOff","e","keyCode","defineVisiblePalete","defineBoardColor","color","defineTextColor","defineButton","button","instructions","rgbType","changeColor","showingSafeZone","marginTop","top"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAO,aAAP;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,SAAD,CAA5C;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,SAAD,CAA1C;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAC5C,6EAD4C,CAA9C;AAGA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACe,eAAD,EAAkBC,kBAAlB,IAAwChB,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACqB,WAAD,EAAcC,cAAd,IAAgCtB,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMuB,eAAe,GAAIC,WAAD,IAAiB;AACvCF,IAAAA,cAAc,CAACE,WAAD,CAAd;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAIC,CAAD,IAAO;AAC5B,QAAIL,WAAW,IAAIK,CAAC,CAACC,OAAF,KAAc,EAAjC,EAAqC;AACnCL,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AACF,GAJD;;AAMA,QAAMM,mBAAmB,GAAG,MAAM;AAChCV,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD;;AAIA,QAAMY,gBAAgB,GAAIC,KAAD,IAAW;AAClC,QAAIrB,UAAU,KAAK,OAAnB,EAA4B;AAC1BH,MAAAA,aAAa,CAACwB,KAAD,CAAb;AACD;AACF,GAJD;;AAMA,QAAMC,eAAe,GAAID,KAAD,IAAW;AACjC,QAAIrB,UAAU,KAAK,MAAnB,EAA2B;AACzBD,MAAAA,YAAY,CAACsB,KAAD,CAAZ;AACD;AACF,GAJD;;AAMA,QAAME,YAAY,GAAIC,MAAD,IAAY;AAC/BvB,IAAAA,aAAa,CAACuB,MAAD,CAAb;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAIC,OAAD,IAAa;AAChC;AACA,QAAIA,OAAO,KAAK,CAAhB,EAAmB;AACjBvB,MAAAA,cAAc,CACZ,6EADY,CAAd;AAGD,KAJD,MAIO,IAAIuB,OAAO,KAAK,CAAhB,EAAmB;AACxBvB,MAAAA,cAAc,CAAC,iDAAD,CAAd;AACAQ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAHM,MAGA,IAAIe,OAAO,KAAK,CAAhB,EAAmB;AACxBvB,MAAAA,cAAc,CAAC,mDAAD,CAAd;AACAQ,MAAAA,YAAY,CAAC,OAAD,CAAZ;AACD,KAHM,MAGA,IAAIe,OAAO,KAAK,CAAhB,EAAmB;AACxBvB,MAAAA,cAAc,CAAC,kDAAD,CAAd;AACAQ,MAAAA,YAAY,CAAC,MAAD,CAAZ;AACD;AACF,GAhBD;;AAkBA,QAAMgB,WAAW,GAAG,MAAM;AACxBtB,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACD,GAFD;;AAIA,QAAMwB,eAAe,GAAIX,CAAD,IAAO;AAC7B;AACA,QAAIA,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;AACpBX,MAAAA,kBAAkB,CAAC,CAACD,eAAF,CAAlB;AACD;AACF,GALD;;AAOAZ,EAAAA,gBAAgB,CAAC,SAAD,EAAYkC,eAAZ,CAAhB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,UAAU,EAAEhC,UADd;AAEE,IAAA,SAAS,EAAEE,SAFb;AAGE,IAAA,eAAe,EAAEQ,eAHnB;AAIE,IAAA,kBAAkB,EAAEM,WAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAPF,CADF,eAUE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,KAAK,EAAE;AAAEiB,MAAAA,SAAS,EAAE,CAACrB,OAAD,IAAY;AAAzB,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD,CACE;AADF;AAEE,IAAA,IAAI,EAAE,OAFR;AAGE,IAAA,WAAW,EAAEY,gBAHf;AAIE,IAAA,MAAM,EAAE,OAJV;AAKE,IAAA,YAAY,EAAEG,YALhB;AAME,IAAA,UAAU,EAAEvB,UANd;AAOE,IAAA,YAAY,EAAEJ,UAPhB;AAQE,IAAA,YAAY,EAAE6B,YARhB;AASE,IAAA,WAAW,EAAEE,WATf;AAUE,IAAA,aAAa,EAAEvB,aAVjB;AAWE,IAAA,mBAAmB,EAAEe,mBAXvB;AAYE,IAAA,eAAe,EAAEL,eAZnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,eAkBE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,KAAK,EAAE;AAAEe,MAAAA,SAAS,EAAErB,OAAO,IAAI;AAAxB,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,eAmBE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,eAoBE;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,KAAK,EAAE;AAAEqB,MAAAA,SAAS,EAAErB,OAAO,IAAI;AAAxB,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAE,MADR;AAEE,IAAA,WAAW,EAAEc,eAFf;AAGE,IAAA,MAAM,EAAE,MAHV;AAIE,IAAA,YAAY,EAAEC,YAJhB;AAKE,IAAA,UAAU,EAAEvB,UALd;AAME,IAAA,YAAY,EAAEF,SANhB;AAOE,IAAA,YAAY,EAAE2B,YAPhB;AAQE,IAAA,WAAW,EAAEE,WARf;AASE,IAAA,aAAa,EAAEvB,aATjB;AAUE,IAAA,mBAAmB,EAAEe,mBAVvB;AAWE,IAAA,eAAe,EAAEL,eAXnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CApBF,eAmCE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,KAAK,EAAE;AAAEgB,MAAAA,GAAG,EAAEtB,OAAO,IAAI;AAAlB,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnCF,CAVF,eA+CE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BN,WAA1B,CADF,EAEGF,UAAU,iBACT,uDAEE;AAAG,IAAA,SAAS,EAAC,aAAb;AAA2B,IAAA,KAAK,EAAE;AAAEqB,MAAAA,KAAK,EAAEX;AAAT,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,UAAU,KAAK,OAAf,GAAyBJ,UAAzB,GAAsCE,SADzC,CAFF,CAHJ,CA/CF,CARF,CADF;AAsED;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"./Board.css\";\nimport { ColorPicker } from \"./components/ColorPicker\";\nimport { Board } from \"./components/Board\";\nimport useEventListener from \"./use-event-listener\";\n\nfunction App() {\n  const [boardColor, setBoardColor] = useState(\"#ffffff\");\n  const [textColor, setTextColor] = useState(\"#000000\");\n  const [buttonType, setButtonType] = useState(\"\");\n  const [textOfColor, setTextOfColor] = useState(\n    \"Press right arrow to change board color and left arrow to change text color\"\n  );\n  const [changingColor, setChangingColor] = useState(false);\n  const [safeZoneVisible, setSafeZoneVisible] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [colorType, setColorType] = useState(\"\");\n  const [DisableInfo, setDisableInfo] = useState(false);\n\n  const showDisableInfo = (trueOrFalse) => {\n    setDisableInfo(trueOrFalse);\n  };\n\n  const disableMenuOff = (e) => {\n    if (DisableInfo && e.keyCode === 13) {\n      setDisableInfo(false);\n    }\n  }\n\n  const defineVisiblePalete = () => {\n    setVisible(!visible);\n  };\n\n  const defineBoardColor = (color) => {\n    if (buttonType === \"board\") {\n      setBoardColor(color);\n    }\n  };\n\n  const defineTextColor = (color) => {\n    if (buttonType === \"text\") {\n      setTextColor(color);\n    }\n  };\n\n  const defineButton = (button) => {\n    setButtonType(button);\n  };\n\n  const instructions = (rgbType) => {\n    // alert(`hey ${buttonType}`)\n    if (rgbType === 0) {\n      setTextOfColor(\n        \"Press right arrow to change board color and left arrow to change text color\"\n      );\n    } else if (rgbType === 1) {\n      setTextOfColor(\"Changing red, press Enter to finnish that color\");\n      setColorType(\"red\");\n    } else if (rgbType === 2) {\n      setTextOfColor(\"Changing green, press Enter to finnish that color\");\n      setColorType(\"green\");\n    } else if (rgbType === 3) {\n      setTextOfColor(\"Changing blue, press Enter to finnish that color\");\n      setColorType(\"blue\");\n    }\n  };\n\n  const changeColor = () => {\n    setChangingColor(!changingColor);\n  };\n\n  const showingSafeZone = (e) => {\n    // if click on space it will show safeZone area\n    if (e.keyCode === 32) {\n      setSafeZoneVisible(!safeZoneVisible);\n    }\n  };\n\n  useEventListener(\"keydown\", showingSafeZone);\n\n  return (\n    <div className=\"App\">\n      <Board\n        boardColor={boardColor}\n        textColor={textColor}\n        safeZoneVisible={safeZoneVisible}\n        showingDisableInfo={DisableInfo}\n      />\n\n      <div className=\"ActionMenu\">\n        <div className=\"hexaTab-top\">\n          <p>Keys:</p>\n          <p>Space: Enable/disable Safe Margin</p>\n          <p>Right Arrow: Enable/disable Board Color</p>\n          <p>Left Arrow: Enable/disable Text Color</p>\n          <p>Up/Down Arrow: Run through RGB color</p>\n          <p>+ / - : Increase/Decrease Font Size</p>\n          <p>Shift: Enable/disable Peacock Font</p>\n        </div>\n        <div className=\"ActionButton\" style={{ marginTop: !visible && \"75%\" }}>\n          <div className=\"top\"></div>\n          <div className=\"pickerstyle2\">\n            <ColorPicker\n              // className=\"button\"\n              text={\"Board\"}\n              defineColor={defineBoardColor}\n              button={\"board\"}\n              defineButton={defineButton}\n              buttonType={buttonType}\n              initialColor={boardColor}\n              instructions={instructions}\n              changeColor={changeColor}\n              changingColor={changingColor}\n              defineVisiblePalete={defineVisiblePalete}\n              showDisableInfo={showDisableInfo}\n            />\n          </div>\n          <div className=\"left\" style={{ marginTop: visible && \"35%\" }}></div>\n          <div className=\"right\"></div>\n          <div className=\"pickerstyle\" style={{ marginTop: visible && \"35%\" }}>\n            <ColorPicker\n              text={\"Text\"}\n              defineColor={defineTextColor}\n              button={\"text\"}\n              defineButton={defineButton}\n              buttonType={buttonType}\n              initialColor={textColor}\n              instructions={instructions}\n              changeColor={changeColor}\n              changingColor={changingColor}\n              defineVisiblePalete={defineVisiblePalete}\n              showDisableInfo={showDisableInfo}\n            />\n          </div>\n          <div className=\"down\" style={{ top: visible && \"4%\" }}></div>\n        </div>\n        <div className=\"hexaTab\">\n          <p className=\"aligntext\">{textOfColor}</p>\n          {buttonType && (\n            <>\n              {/* <p className=\"aligntext\">Changing {buttonType} color.</p> */}\n              <p className=\"hexadecimal\" style={{ color: colorType }}>\n                {buttonType === \"board\" ? boardColor : textColor}\n              </p>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}