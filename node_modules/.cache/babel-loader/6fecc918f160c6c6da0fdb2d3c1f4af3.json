{"ast":null,"code":"var _jsxFileName = \"/Users/GoncaloMira1/App/safe-margin-tester/src/components/ImageMenu.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./ImageMenu.css\";\nimport axios from \"axios\";\nimport useEventListener from \"./../use-event-listener\";\nexport const ImageMenu = ({\n  imageFromChoice,\n  changeSafeZoneColor\n}) => {\n  const [componentMounted, setComponentMounted] = useState(false);\n  const [imageDb, setImageDB] = useState(\"\");\n  const [imageFocus, setImageFocus] = useState(0);\n  const [currentIndexSafeColor, setCurrentIndexSafeColor] = useState(0);\n\n  const fetchImages = () => {\n    if (!componentMounted) {\n      const dbUrl = \"/images/images.json\";\n      axios.get(dbUrl).then(res => {\n        setImageDB(res.data);\n        setComponentMounted(true);\n      });\n    }\n  };\n\n  const changeSafeColor = e => {\n    const colors = [\"red\", \"yellow\", \"blue\", \"black\"];\n\n    if (e.keyCode === 39) {\n      setCurrentIndexSafeColor(currentIndexSafeColor + 1);\n      changeSafeZoneColor(colors[currentIndexSafeColor]);\n    } else if (e.keyCode === 37) {\n      setCurrentIndexSafeColor(currentIndexSafeColor + 1);\n      changeSafeZoneColor(colors[currentIndexSafeColor]);\n    }\n  };\n\n  const changeFocusImage = e => {\n    e.preventDefault();\n\n    if (e.keyCode === 40) {\n      if (imageFocus === imageDb.length) {\n        setImageFocus(1);\n        imageFromChoice(imageDb[0].url);\n      } else {\n        setImageFocus(imageFocus + 1);\n        imageFromChoice(imageDb[imageFocus].url);\n      }\n    } else if (e.keyCode === 38) {\n      if (imageFocus === 1) {\n        setImageFocus(imageDb.length);\n        imageFromChoice(imageDb[imageDb.length - 1].url);\n      } else {\n        setImageFocus(imageFocus - 1);\n        imageFromChoice(imageDb[imageFocus - 1].url);\n      }\n    }\n  };\n\n  useEventListener(\"keydown\", changeFocusImage);\n  useEffect(() => {\n    fetchImages();\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ActionMenu\",\n    style: {\n      marginTop: \"1.5%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, imageDb && /*#__PURE__*/React.createElement(React.Fragment, null, imageDb.map((image, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"image-option\",\n      style: {\n        backgroundColor: index + 1 === imageFocus ? \"red\" : \"\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"image-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, image.url), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mini-image\",\n      style: {\n        backgroundImage: `url(${image.url})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }));\n  })));\n};","map":{"version":3,"sources":["/Users/GoncaloMira1/App/safe-margin-tester/src/components/ImageMenu.jsx"],"names":["React","useState","useEffect","axios","useEventListener","ImageMenu","imageFromChoice","changeSafeZoneColor","componentMounted","setComponentMounted","imageDb","setImageDB","imageFocus","setImageFocus","currentIndexSafeColor","setCurrentIndexSafeColor","fetchImages","dbUrl","get","then","res","data","changeSafeColor","e","colors","keyCode","changeFocusImage","preventDefault","length","url","marginTop","map","image","index","backgroundColor","backgroundImage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./ImageMenu.css\";\nimport axios from \"axios\";\nimport useEventListener from \"./../use-event-listener\";\n\nexport const ImageMenu = ({ imageFromChoice, changeSafeZoneColor }) => {\n  const [componentMounted, setComponentMounted] = useState(false);\n  const [imageDb, setImageDB] = useState(\"\");\n  const [imageFocus, setImageFocus] = useState(0);\n  const [currentIndexSafeColor, setCurrentIndexSafeColor] = useState(0);\n\n  const fetchImages = () => {\n    if (!componentMounted) {\n      const dbUrl = \"/images/images.json\";\n      axios.get(dbUrl).then((res) => {\n        setImageDB(res.data);\n        setComponentMounted(true);\n      });\n    }\n  };\n\n  const changeSafeColor = (e) => {\n    const colors = [\"red\", \"yellow\", \"blue\", \"black\"];\n    if (e.keyCode === 39) {\n      setCurrentIndexSafeColor(currentIndexSafeColor + 1);\n      changeSafeZoneColor(colors[currentIndexSafeColor])\n    } else if (e.keyCode === 37) {\n        setCurrentIndexSafeColor(currentIndexSafeColor + 1);\n        changeSafeZoneColor(colors[currentIndexSafeColor])\n      } \n  };\n\n  const changeFocusImage = (e) => {\n    e.preventDefault();\n    if (e.keyCode === 40) {\n      if (imageFocus === imageDb.length) {\n        setImageFocus(1);\n        imageFromChoice(imageDb[0].url);\n      } else {\n        setImageFocus(imageFocus + 1);\n        imageFromChoice(imageDb[imageFocus].url);\n      }\n    } else if (e.keyCode === 38) {\n      if (imageFocus === 1) {\n        setImageFocus(imageDb.length);\n        imageFromChoice(imageDb[imageDb.length - 1].url);\n      } else {\n        setImageFocus(imageFocus - 1);\n        imageFromChoice(imageDb[imageFocus - 1].url);\n      }\n    }\n  };\n\n  useEventListener(\"keydown\", changeFocusImage);\n\n  useEffect(() => {\n    fetchImages();\n  });\n\n  return (\n    <div className=\"ActionMenu\" style={{ marginTop: \"1.5%\" }}>\n      {imageDb && (\n        <>\n          {imageDb.map((image, index) => {\n            return (\n              <div\n                className=\"image-option\"\n                style={{\n                  backgroundColor: index + 1 === imageFocus ? \"red\" : \"\",\n                }}\n              >\n                <div className=\"image-name\">{image.url}</div>\n                <div\n                  className=\"mini-image\"\n                  style={{ backgroundImage: `url(${image.url})` }}\n                ></div>\n              </div>\n            );\n          })}\n        </>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}