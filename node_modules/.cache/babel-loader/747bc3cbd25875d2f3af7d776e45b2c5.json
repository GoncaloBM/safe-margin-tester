{"ast":null,"code":"var _jsxFileName = \"/Users/GoncaloMira1/App/Contrast/contrast/src/components/ColorPicker.jsx\";\nimport React, { useState } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport \"./ColorPicker.css\";\nimport useEventListener from \"./../use-event-listener\";\nimport { rgbToHex } from \"./RGBtoHex\";\nexport const ColorPicker = ({\n  defineColor,\n  text,\n  defineButton,\n  button,\n  initialColor,\n  defineRgbType\n}) => {\n  const [visiblePallete, setVisiblePallete] = useState(false);\n  const [backgroundColor, setBackgroundColor] = useState(initialColor);\n  const [rgbColor, setRgbColor] = useState({\n    choose: 0\n  });\n\n  const keyboardChoser = e => {\n    e.preventDefault();\n\n    if (e.keyCode === 13) {\n      if (rgbColor.choose === 3) {\n        setRgbColor({ ...rgbColor,\n          choose: 0\n        });\n      } else setRgbColor({ ...rgbColor,\n        choose: rgbColor.choose + 1\n      });\n    }\n\n    if (rgbColor.choose === 1) {\n      if (e.keyCode === 38) {\n        setRgbColor({ ...rgbColor,\n          r: rgbColor.r + 1,\n          g: rgbColor.g,\n          b: rgbColor.b\n        });\n      } else if (e.keyCode === 40) {\n        setRgbColor({ ...rgbColor,\n          r: rgbColor.r - 1,\n          g: rgbColor.g,\n          b: rgbColor.b\n        });\n      }\n    }\n\n    if (rgbColor.choose === 2) {\n      if (e.keyCode === 38) {\n        setRgbColor({ ...rgbColor,\n          r: rgbColor.r,\n          g: rgbColor.g + 1,\n          b: rgbColor.b\n        });\n      } else if (e.keyCode === 40) {\n        setRgbColor({ ...rgbColor,\n          r: rgbColor.r,\n          g: rgbColor.g - 1,\n          b: rgbColor.b\n        });\n      }\n    }\n\n    if (rgbColor.choose === 3) {\n      if (e.keyCode === 38) {\n        setRgbColor({ ...rgbColor,\n          r: rgbColor.r,\n          g: rgbColor.g,\n          b: rgbColor.b + 1\n        });\n      } else if (e.keyCode === 40) {\n        setRgbColor({ ...rgbColor,\n          r: rgbColor.r,\n          g: rgbColor.g,\n          b: rgbColor.b - 1\n        });\n      }\n    }\n\n    setBackgroundColor(rgbToHex(rgbColor.r, rgbColor.g, rgbColor.b));\n    defineColor(rgbToHex(rgbColor.r, rgbColor.g, rgbColor.b));\n    defineRgbType(rgbColor.choose);\n  };\n\n  const handleChangeComplete = color => {\n    setRgbColor({ ...rgbColor,\n      choose: 1,\n      r: color.rgb.r,\n      g: color.rgb.g,\n      b: color.rgb.b\n    });\n    setBackgroundColor(color.hex);\n    defineColor(color.hex);\n    defineRgbType(rgbColor.choose);\n  };\n\n  const click = () => {\n    setVisiblePallete(!visiblePallete);\n    defineButton(button);\n  };\n\n  const openWithKeyboard = e => {\n    e.preventDefault();\n\n    if (rgbColor.choose === 0) {\n      setRgbColor({ ...rgbColor,\n        choose: 1\n      });\n    } else {\n      setRgbColor({ ...rgbColor,\n        choose: 0\n      });\n    }\n\n    if (e.keyCode === 37 && button === \"text\") {\n      setVisiblePallete(!visiblePallete);\n      defineButton(button);\n    } else if (e.keyCode === 39 && button === \"board\") {\n      setVisiblePallete(!visiblePallete);\n      defineButton(button);\n    }\n  };\n\n  useEventListener(\"keydown\", keyboardChoser);\n  useEventListener(\"keydown\", openWithKeyboard);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"color-picker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: click,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, text), visiblePallete && /*#__PURE__*/React.createElement(SketchPicker, {\n    color: backgroundColor,\n    onChangeComplete: handleChangeComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/GoncaloMira1/App/Contrast/contrast/src/components/ColorPicker.jsx"],"names":["React","useState","SketchPicker","useEventListener","rgbToHex","ColorPicker","defineColor","text","defineButton","button","initialColor","defineRgbType","visiblePallete","setVisiblePallete","backgroundColor","setBackgroundColor","rgbColor","setRgbColor","choose","keyboardChoser","e","preventDefault","keyCode","r","g","b","handleChangeComplete","color","rgb","hex","click","openWithKeyboard"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAO,mBAAP;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAC1BC,EAAAA,WAD0B;AAE1BC,EAAAA,IAF0B;AAG1BC,EAAAA,YAH0B;AAI1BC,EAAAA,MAJ0B;AAK1BC,EAAAA,YAL0B;AAM1BC,EAAAA;AAN0B,CAAD,KAOrB;AACJ,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACa,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,CAACS,YAAD,CAAtD;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC;AACvCiB,IAAAA,MAAM,EAAE;AAD+B,GAAD,CAAxC;;AAIA,QAAMC,cAAc,GAAIC,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAID,CAAC,CAACE,OAAF,KAAc,EAAlB,EAAsB;AACpB,UAAIN,QAAQ,CAACE,MAAT,KAAoB,CAAxB,EAA2B;AACzBD,QAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVE,UAAAA,MAAM,EAAE;AAFE,SAAD,CAAX;AAID,OALD,MAMED,WAAW,CAAC,EACV,GAAGD,QADO;AAEVE,QAAAA,MAAM,EAAEF,QAAQ,CAACE,MAAT,GAAkB;AAFhB,OAAD,CAAX;AAIH;;AAED,QAAIF,QAAQ,CAACE,MAAT,KAAoB,CAAxB,EAA2B;AACzB,UAAIE,CAAC,CAACE,OAAF,KAAc,EAAlB,EAAsB;AACpBL,QAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVO,UAAAA,CAAC,EAAEP,QAAQ,CAACO,CAAT,GAAa,CAFN;AAGVC,UAAAA,CAAC,EAAER,QAAQ,CAACQ,CAHF;AAIVC,UAAAA,CAAC,EAAET,QAAQ,CAACS;AAJF,SAAD,CAAX;AAMD,OAPD,MAOO,IAAIL,CAAC,CAACE,OAAF,KAAc,EAAlB,EAAsB;AAC3BL,QAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVO,UAAAA,CAAC,EAAEP,QAAQ,CAACO,CAAT,GAAa,CAFN;AAGVC,UAAAA,CAAC,EAAER,QAAQ,CAACQ,CAHF;AAIVC,UAAAA,CAAC,EAAET,QAAQ,CAACS;AAJF,SAAD,CAAX;AAMD;AACF;;AAED,QAAIT,QAAQ,CAACE,MAAT,KAAoB,CAAxB,EAA2B;AACzB,UAAIE,CAAC,CAACE,OAAF,KAAc,EAAlB,EAAsB;AACpBL,QAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVO,UAAAA,CAAC,EAAEP,QAAQ,CAACO,CAFF;AAGVC,UAAAA,CAAC,EAAER,QAAQ,CAACQ,CAAT,GAAa,CAHN;AAIVC,UAAAA,CAAC,EAAET,QAAQ,CAACS;AAJF,SAAD,CAAX;AAMD,OAPD,MAOO,IAAIL,CAAC,CAACE,OAAF,KAAc,EAAlB,EAAsB;AAC3BL,QAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVO,UAAAA,CAAC,EAAEP,QAAQ,CAACO,CAFF;AAGVC,UAAAA,CAAC,EAAER,QAAQ,CAACQ,CAAT,GAAa,CAHN;AAIVC,UAAAA,CAAC,EAAET,QAAQ,CAACS;AAJF,SAAD,CAAX;AAMD;AACF;;AAED,QAAIT,QAAQ,CAACE,MAAT,KAAoB,CAAxB,EAA2B;AACzB,UAAIE,CAAC,CAACE,OAAF,KAAc,EAAlB,EAAsB;AACpBL,QAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVO,UAAAA,CAAC,EAAEP,QAAQ,CAACO,CAFF;AAGVC,UAAAA,CAAC,EAAER,QAAQ,CAACQ,CAHF;AAIVC,UAAAA,CAAC,EAAET,QAAQ,CAACS,CAAT,GAAa;AAJN,SAAD,CAAX;AAMD,OAPD,MAOO,IAAIL,CAAC,CAACE,OAAF,KAAc,EAAlB,EAAsB;AAC3BL,QAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVO,UAAAA,CAAC,EAAEP,QAAQ,CAACO,CAFF;AAGVC,UAAAA,CAAC,EAAER,QAAQ,CAACQ,CAHF;AAIVC,UAAAA,CAAC,EAAET,QAAQ,CAACS,CAAT,GAAa;AAJN,SAAD,CAAX;AAMD;AACF;;AAEDV,IAAAA,kBAAkB,CAACX,QAAQ,CAACY,QAAQ,CAACO,CAAV,EAAaP,QAAQ,CAACQ,CAAtB,EAAyBR,QAAQ,CAACS,CAAlC,CAAT,CAAlB;AACAnB,IAAAA,WAAW,CAACF,QAAQ,CAACY,QAAQ,CAACO,CAAV,EAAaP,QAAQ,CAACQ,CAAtB,EAAyBR,QAAQ,CAACS,CAAlC,CAAT,CAAX;AACAd,IAAAA,aAAa,CAACK,QAAQ,CAACE,MAAV,CAAb;AACD,GAxED;;AA0EA,QAAMQ,oBAAoB,GAAIC,KAAD,IAAW;AACtCV,IAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVE,MAAAA,MAAM,EAAE,CAFE;AAGVK,MAAAA,CAAC,EAAEI,KAAK,CAACC,GAAN,CAAUL,CAHH;AAIVC,MAAAA,CAAC,EAAEG,KAAK,CAACC,GAAN,CAAUJ,CAJH;AAKVC,MAAAA,CAAC,EAAEE,KAAK,CAACC,GAAN,CAAUH;AALH,KAAD,CAAX;AAOAV,IAAAA,kBAAkB,CAACY,KAAK,CAACE,GAAP,CAAlB;AACAvB,IAAAA,WAAW,CAACqB,KAAK,CAACE,GAAP,CAAX;AACAlB,IAAAA,aAAa,CAACK,QAAQ,CAACE,MAAV,CAAb;AACD,GAXD;;AAaA,QAAMY,KAAK,GAAG,MAAM;AAClBjB,IAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AACAJ,IAAAA,YAAY,CAACC,MAAD,CAAZ;AACD,GAHD;;AAKA,QAAMsB,gBAAgB,GAAIX,CAAD,IAAO;AAC9BA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAIL,QAAQ,CAACE,MAAT,KAAoB,CAAxB,EAA2B;AACzBD,MAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAaE,QAAAA,MAAM,EAAC;AAApB,OAAD,CAAX;AACD,KAFD,MAEO;AAACD,MAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAaE,QAAAA,MAAM,EAAC;AAApB,OAAD,CAAX;AAAoC;;AAE5C,QAAIE,CAAC,CAACE,OAAF,KAAc,EAAd,IAAoBb,MAAM,KAAK,MAAnC,EAA2C;AACzCI,MAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AACAJ,MAAAA,YAAY,CAACC,MAAD,CAAZ;AACD,KAHD,MAGO,IAAIW,CAAC,CAACE,OAAF,KAAc,EAAd,IAAoBb,MAAM,KAAK,OAAnC,EAA4C;AACjDI,MAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AACAJ,MAAAA,YAAY,CAACC,MAAD,CAAZ;AACD;AACF,GAdD;;AAgBAN,EAAAA,gBAAgB,CAAC,SAAD,EAAYgB,cAAZ,CAAhB;AACAhB,EAAAA,gBAAgB,CAAC,SAAD,EAAY4B,gBAAZ,CAAhB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBvB,IAAzB,CADF,EAEGK,cAAc,iBACb,oBAAC,YAAD;AACE,IAAA,KAAK,EAAEE,eADT;AAEE,IAAA,gBAAgB,EAAEY,oBAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADF;AAWD,CAvIM","sourcesContent":["import React, { useState } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport \"./ColorPicker.css\";\nimport useEventListener from \"./../use-event-listener\";\nimport { rgbToHex } from \"./RGBtoHex\";\n\nexport const ColorPicker = ({\n  defineColor,\n  text,\n  defineButton,\n  button,\n  initialColor,\n  defineRgbType,\n}) => {\n  const [visiblePallete, setVisiblePallete] = useState(false);\n  const [backgroundColor, setBackgroundColor] = useState(initialColor);\n  const [rgbColor, setRgbColor] = useState({\n    choose: 0,\n  });\n\n  const keyboardChoser = (e) => {\n    e.preventDefault();\n    if (e.keyCode === 13) {\n      if (rgbColor.choose === 3) {\n        setRgbColor({\n          ...rgbColor,\n          choose: 0,\n        });\n      } else\n        setRgbColor({\n          ...rgbColor,\n          choose: rgbColor.choose + 1,\n        });\n    }\n\n    if (rgbColor.choose === 1) {\n      if (e.keyCode === 38) {\n        setRgbColor({\n          ...rgbColor,\n          r: rgbColor.r + 1,\n          g: rgbColor.g,\n          b: rgbColor.b,\n        });\n      } else if (e.keyCode === 40) {\n        setRgbColor({\n          ...rgbColor,\n          r: rgbColor.r - 1,\n          g: rgbColor.g,\n          b: rgbColor.b,\n        });\n      }\n    }\n\n    if (rgbColor.choose === 2) {\n      if (e.keyCode === 38) {\n        setRgbColor({\n          ...rgbColor,\n          r: rgbColor.r,\n          g: rgbColor.g + 1,\n          b: rgbColor.b,\n        });\n      } else if (e.keyCode === 40) {\n        setRgbColor({\n          ...rgbColor,\n          r: rgbColor.r,\n          g: rgbColor.g - 1,\n          b: rgbColor.b,\n        });\n      }\n    }\n\n    if (rgbColor.choose === 3) {\n      if (e.keyCode === 38) {\n        setRgbColor({\n          ...rgbColor,\n          r: rgbColor.r,\n          g: rgbColor.g,\n          b: rgbColor.b + 1,\n        });\n      } else if (e.keyCode === 40) {\n        setRgbColor({\n          ...rgbColor,\n          r: rgbColor.r,\n          g: rgbColor.g,\n          b: rgbColor.b - 1,\n        });\n      }\n    }\n\n    setBackgroundColor(rgbToHex(rgbColor.r, rgbColor.g, rgbColor.b));\n    defineColor(rgbToHex(rgbColor.r, rgbColor.g, rgbColor.b));\n    defineRgbType(rgbColor.choose);\n  };\n\n  const handleChangeComplete = (color) => {\n    setRgbColor({\n      ...rgbColor,\n      choose: 1,\n      r: color.rgb.r,\n      g: color.rgb.g,\n      b: color.rgb.b,\n    });\n    setBackgroundColor(color.hex);\n    defineColor(color.hex);\n    defineRgbType(rgbColor.choose);\n  };\n\n  const click = () => {\n    setVisiblePallete(!visiblePallete);\n    defineButton(button);\n  };\n\n  const openWithKeyboard = (e) => {\n    e.preventDefault();\n\n    if (rgbColor.choose === 0) {\n      setRgbColor({...rgbColor,choose:1})\n    } else {setRgbColor({...rgbColor,choose:0})}\n\n    if (e.keyCode === 37 && button === \"text\") {\n      setVisiblePallete(!visiblePallete);\n      defineButton(button);\n    } else if (e.keyCode === 39 && button === \"board\") {\n      setVisiblePallete(!visiblePallete);\n      defineButton(button);\n    }\n  };\n\n  useEventListener(\"keydown\", keyboardChoser);\n  useEventListener(\"keydown\", openWithKeyboard);\n  return (\n    <div className=\"color-picker\">\n      <button onClick={click}>{text}</button>\n      {visiblePallete && (\n        <SketchPicker\n          color={backgroundColor}\n          onChangeComplete={handleChangeComplete}\n        />\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}