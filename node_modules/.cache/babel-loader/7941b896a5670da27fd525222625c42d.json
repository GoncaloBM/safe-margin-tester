{"ast":null,"code":"var _jsxFileName = \"/Users/GoncaloMira1/App/Contrast/contrast/src/App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"./Board.css\";\nimport { ColorPicker } from \"./components/ColorPicker\";\n\nfunction App() {\n  const [boardColor, setBoardColor] = useState(\"\");\n  const [textColor, setTextColor] = useState(\"\");\n  const [buttonType, setButtonType] = useState(\"\");\n\n  const defineBoardColor = color => {\n    if (buttonType === \"board\") {\n      setBoardColor(color);\n    }\n  };\n\n  const defineTextColor = color => {\n    if (buttonType === \"text\") {\n      setTextColor(color);\n    }\n  };\n\n  const defineButton = button => {\n    setButtonType(button);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"layoutName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Your Layout\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board\",\n    style: {\n      backgroundColor: `${boardColor}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    style: {\n      color: `${textColor}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Star Wars - The Last Jedi\"), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mediumtext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"A small river named Duden flows by their place and supplies it.\"), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mediumtext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Far far away, behind the word mountains, far from the countries Vokalia and a Consonantia, there live the blind texts. Separated they live in Bookmarksgrove right at the coast of the Semantics, a large language ocean.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ButtonLeft\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ColorPicker, {\n    className: \"button\",\n    text: \"Choose your Board Color\",\n    defineColor: defineBoardColor,\n    button: \"board\",\n    defineButton: defineButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ButtonRight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(ColorPicker, {\n    text: \"Choose your Text Color\",\n    defineColor: defineTextColor,\n    button: \"text\",\n    defineButton: defineButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/GoncaloMira1/App/Contrast/contrast/src/App.js"],"names":["React","useState","ColorPicker","App","boardColor","setBoardColor","textColor","setTextColor","buttonType","setButtonType","defineBoardColor","color","defineTextColor","defineButton","button","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAO,aAAP;AACA,SAASC,WAAT,QAA4B,0BAA5B;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMS,gBAAgB,GAAIC,KAAD,IAAW;AAClC,QAAIH,UAAU,KAAK,OAAnB,EAA4B;AAC1BH,MAAAA,aAAa,CAACM,KAAD,CAAb;AACD;AACF,GAJD;;AAMA,QAAMC,eAAe,GAAID,KAAD,IAAW;AACjC,QAAIH,UAAU,KAAK,MAAnB,EAA2B;AACzBD,MAAAA,YAAY,CAACI,KAAD,CAAZ;AACD;AACF,GAJD;;AAMA,QAAME,YAAY,GAAIC,MAAD,IAAY;AAC/BL,IAAAA,aAAa,CAACK,MAAD,CAAb;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAG,GAAEX,UAAW;AAAjC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,KAAK,EAAE;AAAEO,MAAAA,KAAK,EAAG,GAAEL,SAAU;AAAtB,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,eAEE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEAFF,eAGE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iOAHF,CADF,CAFF,eASE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,QAAvB;AACE,IAAA,IAAI,EAAE,yBADR;AAEE,IAAA,WAAW,EAAEI,gBAFf;AAGE,IAAA,MAAM,EAAE,OAHV;AAIE,IAAA,YAAY,EAAEG,YAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CATF,eAiBG;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACD,oBAAC,WAAD;AACE,IAAA,IAAI,EAAE,wBADR;AAEE,IAAA,WAAW,EAAED,eAFf;AAGE,IAAA,MAAM,EAAE,MAHV;AAIE,IAAA,YAAY,EAAEC,YAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,CAjBH,CADF;AA4BD;;AAED,eAAeV,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"./Board.css\";\nimport { ColorPicker } from \"./components/ColorPicker\";\n\nfunction App() {\n  const [boardColor, setBoardColor] = useState(\"\");\n  const [textColor, setTextColor] = useState(\"\");\n  const [buttonType, setButtonType] = useState(\"\");\n\n  const defineBoardColor = (color) => {\n    if (buttonType === \"board\") {\n      setBoardColor(color);\n    }\n  };\n\n  const defineTextColor = (color) => {\n    if (buttonType === \"text\") {\n      setTextColor(color);\n    }\n  };\n\n  const defineButton = (button) => {\n    setButtonType(button);\n  };\n\n  return (\n    <div className=\"App\">\n      <h2 className=\"layoutName\">Your Layout</h2>\n      <div className=\"board\" style={{ backgroundColor: `${boardColor}` }}>\n        <div className=\"text\" style={{ color: `${textColor}` }}>\n          <h2>Star Wars - The Last Jedi</h2>\n          <h4 className=\"mediumtext\">A small river named Duden flows by their place and supplies it.</h4>\n          <h5 className=\"mediumtext\">Far far away, behind the word mountains, far from the countries Vokalia and a Consonantia, there live the blind texts. Separated they live in Bookmarksgrove right at the coast of the Semantics, a large language ocean.</h5>\n        </div>\n      </div>\n      <div className=\"ButtonLeft\">\n      <ColorPicker className=\"button\"\n        text={\"Choose your Board Color\"}\n        defineColor={defineBoardColor}\n        button={\"board\"}\n        defineButton={defineButton}\n      />\n       </div>\n       <div className=\"ButtonRight\">\n      <ColorPicker\n        text={\"Choose your Text Color\"}\n        defineColor={defineTextColor}\n        button={\"text\"}\n        defineButton={defineButton}\n      />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}