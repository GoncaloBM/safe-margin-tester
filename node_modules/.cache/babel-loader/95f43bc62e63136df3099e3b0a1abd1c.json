{"ast":null,"code":"var _jsxFileName = \"/Users/GoncaloMira1/App/Contrast/contrast/src/App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"./Board.css\";\nimport { ColorPicker } from \"./components/ColorPicker\";\nimport { SafeZone } from \"./components/SafeZone\";\nimport { Board } from \"./components/Board\";\nimport useEventListener from \"./use-event-listener\";\nimport classNames from \"classnames\";\n\nfunction App() {\n  const [boardColor, setBoardColor] = useState(\"#ffffff\");\n  const [textColor, setTextColor] = useState(\"#000000\");\n  const [buttonType, setButtonType] = useState(\"\");\n  const [textOfColor, setTextOfColor] = useState(\"Press right arrow to change board color and left arrow to change text color\");\n  const [changingColor, setChangingColor] = useState(false);\n  const [safeZoneVisible, setSafeZoneVisible] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [colorType, setColorType] = useState('');\n\n  const defineVisiblePalete = () => {\n    setVisible(!visible);\n  };\n\n  const defineBoardColor = color => {\n    console.log(color);\n\n    if (buttonType === \"board\") {\n      setBoardColor(color);\n    }\n  };\n\n  const defineTextColor = color => {\n    console.log(color);\n\n    if (buttonType === \"text\") {\n      setTextColor(color);\n    }\n  };\n\n  const defineButton = button => {\n    setButtonType(button);\n  };\n\n  const instructions = rgbType => {\n    // alert(`hey ${buttonType}`)\n    if (rgbType === 0) {\n      setTextOfColor(\"Press right arrow to change board color and left arrow to change text color\");\n    } else if (rgbType === 1) {\n      setTextOfColor(\"Changing red, press Enter to finnish that color\");\n      return 'red';\n    } else if (rgbType === 2) {\n      setTextOfColor(\"Changing green, press Enter to finnish that color\");\n      return \"green\";\n    } else if (rgbType === 3) {\n      setTextOfColor(\"Changing blue, press Enter to finnish that color\");\n      return \"blue\";\n    }\n  };\n\n  const changeColor = () => {\n    setChangingColor(!changingColor);\n  };\n\n  const showingSafeZone = e => {\n    // if click on space it will show safeZone area\n    if (e.keyCode === 32) {\n      setSafeZoneVisible(!safeZoneVisible);\n    }\n  }; // const hexaColor = () => {\n  //   if (rgbType) {\n  //     if (rgbType === 1) {\n  //       return \"red\";\n  //     } else if (rgbType === 2) {\n  //       return \"green\";\n  //     } else if (rgbType === 3) {\n  //       return \"blue\";\n  //     }\n  //   } else {\n  //     return;\n  //   }\n  // };\n\n\n  useEventListener(\"keydown\", showingSafeZone);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"layoutName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \"This is your Layout\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, \"Press Space Button so show safe area.\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, \"Press + and - buttons to increase and decrease font size and\", \" \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"Shift\"), \" to add/remove Peacock font.\"), /*#__PURE__*/React.createElement(Board, {\n    boardColor: boardColor,\n    textColor: textColor,\n    safeZoneVisible: safeZoneVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ActionMenu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ActionButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pickerstyle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ColorPicker, {\n    className: \"button\",\n    text: \"Board\",\n    defineColor: defineBoardColor,\n    button: \"board\",\n    defineButton: defineButton,\n    buttonType: buttonType,\n    initialColor: boardColor,\n    instructions: instructions,\n    changeColor: changeColor,\n    changingColor: changingColor,\n    defineVisiblePalete: defineVisiblePalete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left\",\n    style: {\n      marginTop: visible && \"35%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pickerstyle\",\n    style: {\n      marginTop: visible && \"35%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ColorPicker, {\n    text: \"Text\",\n    defineColor: defineTextColor,\n    button: \"text\",\n    defineButton: defineButton,\n    buttonType: buttonType,\n    initialColor: textColor,\n    instructions: instructions,\n    changeColor: changeColor,\n    changingColor: changingColor,\n    defineVisiblePalete: defineVisiblePalete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"down\",\n    style: {\n      top: visible && \"4%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hexaTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"aligntext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, textOfColor), buttonType && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"hexadecimal\",\n    style: {\n      color: instructions\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, buttonType === \"board\" ? boardColor : textColor))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/GoncaloMira1/App/Contrast/contrast/src/App.js"],"names":["React","useState","ColorPicker","SafeZone","Board","useEventListener","classNames","App","boardColor","setBoardColor","textColor","setTextColor","buttonType","setButtonType","textOfColor","setTextOfColor","changingColor","setChangingColor","safeZoneVisible","setSafeZoneVisible","visible","setVisible","colorType","setColorType","defineVisiblePalete","defineBoardColor","color","console","log","defineTextColor","defineButton","button","instructions","rgbType","changeColor","showingSafeZone","e","keyCode","marginTop","top"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"./Board.css\";\nimport { ColorPicker } from \"./components/ColorPicker\";\nimport { SafeZone } from \"./components/SafeZone\";\nimport { Board } from \"./components/Board\";\nimport useEventListener from \"./use-event-listener\";\nimport classNames from \"classnames\";\n\nfunction App() {\n  const [boardColor, setBoardColor] = useState(\"#ffffff\");\n  const [textColor, setTextColor] = useState(\"#000000\");\n  const [buttonType, setButtonType] = useState(\"\");\n  const [textOfColor, setTextOfColor] = useState(\n    \"Press right arrow to change board color and left arrow to change text color\"\n  );\n  const [changingColor, setChangingColor] = useState(false);\n  const [safeZoneVisible, setSafeZoneVisible] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [colorType, setColorType] = useState('')\n\n  const defineVisiblePalete = () => {\n    setVisible(!visible);\n  };\n\n  const defineBoardColor = (color) => {\n    console.log(color);\n    if (buttonType === \"board\") {\n      setBoardColor(color);\n    }\n  };\n\n  const defineTextColor = (color) => {\n    console.log(color);\n    if (buttonType === \"text\") {\n      setTextColor(color);\n    }\n  };\n\n  const defineButton = (button) => {\n    setButtonType(button);\n  };\n\n  const instructions = (rgbType) => {\n    // alert(`hey ${buttonType}`)\n    if (rgbType === 0) {\n      setTextOfColor(\n        \"Press right arrow to change board color and left arrow to change text color\"\n      );\n    } else if (rgbType === 1) {\n      setTextOfColor(\"Changing red, press Enter to finnish that color\");\n      return 'red';\n    } else if (rgbType === 2) {\n      setTextOfColor(\"Changing green, press Enter to finnish that color\");\n      return \"green\";\n    } else if (rgbType === 3) {\n      setTextOfColor(\"Changing blue, press Enter to finnish that color\");\n      return \"blue\";\n    }\n  };\n\n  const changeColor = () => {\n    setChangingColor(!changingColor);\n  };\n\n  const showingSafeZone = (e) => {\n    // if click on space it will show safeZone area\n    if (e.keyCode === 32) {\n      setSafeZoneVisible(!safeZoneVisible);\n    }\n  };\n\n  // const hexaColor = () => {\n  //   if (rgbType) {\n  //     if (rgbType === 1) {\n  //       return \"red\";\n  //     } else if (rgbType === 2) {\n  //       return \"green\";\n  //     } else if (rgbType === 3) {\n  //       return \"blue\";\n  //     }\n  //   } else {\n  //     return;\n  //   }\n  // };\n\n  useEventListener(\"keydown\", showingSafeZone);\n\n  return (\n    <div className=\"App\">\n      <h2 className=\"layoutName\">This is your Layout</h2>\n\n      <h3 className=\"instructions\">Press Space Button so show safe area.</h3>\n      <h3 className=\"instructions\">\n        Press + and - buttons to increase and decrease font size and{\" \"}\n        <strong>Shift</strong> to add/remove Peacock font.\n      </h3>\n      <Board\n        boardColor={boardColor}\n        textColor={textColor}\n        safeZoneVisible={safeZoneVisible}\n      />\n\n      <div className=\"ActionMenu\">\n        <div className=\"ActionButton\">\n          <div className=\"top\"></div>\n          <div className=\"pickerstyle2\">\n            <ColorPicker\n              className=\"button\"\n              text={\"Board\"}\n              defineColor={defineBoardColor}\n              button={\"board\"}\n              defineButton={defineButton}\n              buttonType={buttonType}\n              initialColor={boardColor}\n              instructions={instructions}\n              changeColor={changeColor}\n              changingColor={changingColor}\n              defineVisiblePalete={defineVisiblePalete}\n            />\n          </div>\n          <div className=\"left\" style={{ marginTop: visible && \"35%\" }}></div>\n          <div className=\"right\"></div>\n          <div className=\"pickerstyle\" style={{ marginTop: visible && \"35%\" }}>\n            <ColorPicker\n              text={\"Text\"}\n              defineColor={defineTextColor}\n              button={\"text\"}\n              defineButton={defineButton}\n              buttonType={buttonType}\n              initialColor={textColor}\n              instructions={instructions}\n              changeColor={changeColor}\n              changingColor={changingColor}\n              defineVisiblePalete={defineVisiblePalete}\n            />\n          </div>\n          <div className=\"down\" style={{ top: visible && \"4%\" }}></div>\n          <div className=\"hexaTab\">\n            <p className=\"aligntext\">{textOfColor}</p>\n            {buttonType && (\n              <>\n                {/* <p className=\"aligntext\">Changing {buttonType} color.</p> */}\n                <p className=\"hexadecimal\" style={{ color: instructions }}>\n                  {buttonType === \"board\" ? boardColor : textColor}\n                </p>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}