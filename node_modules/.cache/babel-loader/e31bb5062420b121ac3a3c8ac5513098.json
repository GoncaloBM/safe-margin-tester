{"ast":null,"code":"var _jsxFileName = \"/Users/GoncaloMira1/App/Contrast/contrast/src/App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"./Board.css\";\nimport { ColorPicker } from \"./components/ColorPicker\";\n\nfunction App() {\n  const [boardColor, setBoardColor] = useState(\"#ffffff\");\n  const [textColor, setTextColor] = useState(\"#000000\");\n  const [buttonType, setButtonType] = useState(\"\");\n  const [rgbType, setRgbType] = useState(0);\n  const [textOfColor, setTextOfColor] = useState(\"\");\n  const [changingColor, setChangingColor] = useState(false);\n\n  const defineBoardColor = color => {\n    if (buttonType === \"board\") {\n      setBoardColor(color);\n    }\n  };\n\n  const defineTextColor = color => {\n    if (buttonType === \"text\") {\n      setTextColor(color);\n    }\n  };\n\n  const defineButton = button => {\n    setButtonType(button);\n  };\n\n  const defineRgbType = type => {\n    if (type === 0 || type === 1) {\n      setTextOfColor(\"Change red using up and down arrow, press Enter to finnish that color\");\n    } else if (type === 2) {\n      setTextOfColor(\"Changing green, press Enter to finnish that color\");\n    } else if (type === 3) {\n      setTextOfColor(\"Changing blue, press Enter to finnish that color\");\n    }\n  };\n\n  const changeColor = () => {\n    setChangingColor(!changingColor);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"layoutName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Your Layout\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board\",\n    style: {\n      backgroundColor: `${boardColor}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    style: {\n      color: `${textColor}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Star Wars - The Last Jedi\"), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mediumtext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"A small river named Duden flows by their place and supplies it.\"), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mediumtext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Far far away, behind the word mountains, far from the countries Vokalia and a Consonantia, there live the blind texts. Separated they live in Bookmarksgrove right at the coast of the Semantics, a large language ocean.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ButtonLeft\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ColorPicker, {\n    className: \"button\",\n    text: \"Choose your Board Color\",\n    defineColor: defineBoardColor,\n    button: \"board\",\n    defineButton: defineButton,\n    initialColor: boardColor,\n    defineRgbType: defineRgbType,\n    changeColor: changeColor,\n    changingColor: changingColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ButtonRight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ColorPicker, {\n    text: \"Choose your Text Color\",\n    defineColor: defineTextColor,\n    button: \"text\",\n    defineButton: defineButton,\n    initialColor: textColor,\n    defineRgbType: defineRgbType,\n    changeColor: changeColor,\n    changingColor: changingColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, \"Press left arrow to change text color and right arrow to change board color\"), buttonType && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"Changing \", buttonType, \" color.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, textOfColor), buttonType === \"board\" ? boardColor : textColor));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/GoncaloMira1/App/Contrast/contrast/src/App.js"],"names":["React","useState","ColorPicker","App","boardColor","setBoardColor","textColor","setTextColor","buttonType","setButtonType","rgbType","setRgbType","textOfColor","setTextOfColor","changingColor","setChangingColor","defineBoardColor","color","defineTextColor","defineButton","button","defineRgbType","type","changeColor","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"./Board.css\";\nimport { ColorPicker } from \"./components/ColorPicker\";\n\nfunction App() {\n  const [boardColor, setBoardColor] = useState(\"#ffffff\");\n  const [textColor, setTextColor] = useState(\"#000000\");\n  const [buttonType, setButtonType] = useState(\"\");\n  const [rgbType, setRgbType] = useState(0);\n  const [textOfColor, setTextOfColor] = useState(\"\");\n  const [changingColor, setChangingColor] = useState(false);\n\n  const defineBoardColor = (color) => {\n    if (buttonType === \"board\") {\n      setBoardColor(color);\n    }\n  };\n\n  const defineTextColor = (color) => {\n    if (buttonType === \"text\") {\n      setTextColor(color);\n    }\n  };\n\n  const defineButton = (button) => {\n      setButtonType(button);\n  };\n\n  const defineRgbType = (type) => {\n    if (type === 0 || type === 1) {\n      setTextOfColor(\n        \"Change red using up and down arrow, press Enter to finnish that color\"\n      );\n    } else if (type === 2) {\n      setTextOfColor(\"Changing green, press Enter to finnish that color\");\n    } else if (type === 3) {\n      setTextOfColor(\"Changing blue, press Enter to finnish that color\");\n    }\n  };\n\n  const changeColor = () => {\n    setChangingColor(!changingColor);\n  };\n\n  return (\n    <div className=\"App\">\n      <h2 className=\"layoutName\">Your Layout</h2>\n      <div className=\"board\" style={{ backgroundColor: `${boardColor}` }}>\n        <div className=\"text\" style={{ color: `${textColor}` }}>\n          <h2>Star Wars - The Last Jedi</h2>\n          <h4 className=\"mediumtext\">\n            A small river named Duden flows by their place and supplies it.\n          </h4>\n          <h5 className=\"mediumtext\">\n            Far far away, behind the word mountains, far from the countries\n            Vokalia and a Consonantia, there live the blind texts. Separated\n            they live in Bookmarksgrove right at the coast of the Semantics, a\n            large language ocean.\n          </h5>\n        </div>\n      </div>\n      <div className=\"ButtonLeft\">\n        <ColorPicker\n          className=\"button\"\n          text={\"Choose your Board Color\"}\n          defineColor={defineBoardColor}\n          button={\"board\"}\n          defineButton={defineButton}\n          initialColor={boardColor}\n          defineRgbType={defineRgbType}\n          changeColor={changeColor}\n          changingColor={changingColor}\n        />\n      </div>\n      <div className=\"ButtonRight\">\n        <ColorPicker\n          text={\"Choose your Text Color\"}\n          defineColor={defineTextColor}\n          button={\"text\"}\n          defineButton={defineButton}\n          initialColor={textColor}\n          defineRgbType={defineRgbType}\n          changeColor={changeColor}\n          changingColor={changingColor}\n        />\n      </div>\n      <p>\n        Press left arrow to change text color and right arrow to change board\n        color\n      </p>\n      {buttonType && (\n        <div>\n          <p>Changing {buttonType} color.</p>\n          <p>{textOfColor}</p>\n          {buttonType === \"board\" ? boardColor : textColor}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}