{"ast":null,"code":"var _jsxFileName = \"/Users/GoncaloMira1/App/Contrast/contrast/src/App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"./Board.css\";\nimport { ColorPicker } from \"./components/ColorPicker\";\n\nfunction App() {\n  const [boardColor, setBoardColor] = useState(\"#ffffff\");\n  const [textColor, setTextColor] = useState(\"#000000\");\n  const [buttonType, setButtonType] = useState(\"\");\n  const [textOfColor, setTextOfColor] = useState(\"\");\n  const [changingColor, setChangingColor] = useState(false);\n\n  const defineBoardColor = color => {\n    if (buttonType === \"board\") {\n      setBoardColor(color);\n    }\n  };\n\n  const defineTextColor = color => {\n    if (buttonType === \"text\") {\n      setTextColor(color);\n    }\n  };\n\n  const defineButton = button => {\n    setButtonType(button);\n  };\n\n  const instructions = type => {\n    if (type === 0) {\n      setTextOfColor(\"Press right arrow to change board color and left arrow to change text color\");\n    } else if (type === 1) {\n      setTextOfColor(\"Changing red, press Enter to finnish that color\");\n    } else if (type === 2) {\n      setTextOfColor(\"Changing green, press Enter to finnish that color\");\n    } else if (type === 3) {\n      setTextOfColor(\"Changing blue, press Enter to finnish that color\");\n    }\n  };\n\n  const changeColor = () => {\n    setChangingColor(!changingColor);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"layoutName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"This is your Layout\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"If you're on a TV, Press left arrow to change text color and right arrow to change board color\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board\",\n    style: {\n      backgroundColor: `${boardColor}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    style: {\n      color: `${textColor}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Star Wars - The Last Jedi\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mediumtext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"A small river named Duden flows by their place and supplies it.\"), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mediumtext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Far far away, behind the word mountains, far from the countries Vokalia and a Consonantia, there live the blind texts. Separated they live in Bookmarksgrove right at the coast of the Semantics, a large language ocean.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ActionMenu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ActionButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pickerstyle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ColorPicker, {\n    className: \"button\",\n    text: \"Choose your Board Color\",\n    defineColor: defineBoardColor,\n    button: \"board\",\n    defineButton: defineButton,\n    buttonType: buttonType,\n    initialColor: boardColor,\n    instructions: instructions,\n    changeColor: changeColor,\n    changingColor: changingColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pickerstyle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ColorPicker, {\n    text: \"Choose your Text Color\",\n    defineColor: defineTextColor,\n    button: \"text\",\n    defineButton: defineButton,\n    buttonType: buttonType,\n    initialColor: textColor,\n    defineRgbType: defineRgbType,\n    changeColor: changeColor,\n    changingColor: changingColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }), buttonType && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hexaTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"aligntext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, \"Changing \", buttonType, \" color.\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"aligntext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, textOfColor), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"hexadecimal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, buttonType === \"board\" ? boardColor : textColor)))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/GoncaloMira1/App/Contrast/contrast/src/App.js"],"names":["React","useState","ColorPicker","App","boardColor","setBoardColor","textColor","setTextColor","buttonType","setButtonType","textOfColor","setTextOfColor","changingColor","setChangingColor","defineBoardColor","color","defineTextColor","defineButton","button","instructions","type","changeColor","backgroundColor","defineRgbType"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"./Board.css\";\nimport { ColorPicker } from \"./components/ColorPicker\";\n\nfunction App() {\n  const [boardColor, setBoardColor] = useState(\"#ffffff\");\n  const [textColor, setTextColor] = useState(\"#000000\");\n  const [buttonType, setButtonType] = useState(\"\");\n  const [textOfColor, setTextOfColor] = useState(\"\");\n  const [changingColor, setChangingColor] = useState(false);\n\n  const defineBoardColor = (color) => {\n    if (buttonType === \"board\") {\n      setBoardColor(color);\n    }\n  };\n\n  const defineTextColor = (color) => {\n    if (buttonType === \"text\") {\n      setTextColor(color);\n    }\n  };\n\n  const defineButton = (button) => {\n    setButtonType(button);\n  };\n\n  const instructions = (type) => {\n    if (type === 0) {\n      setTextOfColor(\n        \"Press right arrow to change board color and left arrow to change text color\"\n      );\n    } else if (type === 1) {\n      setTextOfColor(\"Changing red, press Enter to finnish that color\");\n    } else if (type === 2) {\n      setTextOfColor(\"Changing green, press Enter to finnish that color\");\n    } else if (type === 3) {\n      setTextOfColor(\"Changing blue, press Enter to finnish that color\");\n    }\n  };\n\n  const changeColor = () => {\n    setChangingColor(!changingColor);\n  };\n\n  return (\n    <div className=\"App\">\n      <h2 className=\"layoutName\">This is your Layout</h2>\n\n      <h3 className=\"instructions\">\n        If you're on a TV, Press left arrow to change text color and right arrow\n        to change board color\n      </h3>\n      <div className=\"board\" style={{ backgroundColor: `${boardColor}` }}>\n        <div className=\"text\" style={{ color: `${textColor}` }}>\n          <h2>Star Wars - The Last Jedi</h2>\n          <h3 className=\"mediumtext\">\n            A small river named Duden flows by their place and supplies it.\n          </h3>\n          <h5 className=\"mediumtext\">\n            Far far away, behind the word mountains, far from the countries\n            Vokalia and a Consonantia, there live the blind texts. Separated\n            they live in Bookmarksgrove right at the coast of the Semantics, a\n            large language ocean.\n          </h5>\n        </div>\n      </div>\n      <div className=\"ActionMenu\">\n        <div className=\"ActionButton\">\n          <div className=\"top\"></div>\n          <div className=\"pickerstyle2\">\n            <ColorPicker\n              className=\"button\"\n              text={\"Choose your Board Color\"}\n              defineColor={defineBoardColor}\n              button={\"board\"}\n              defineButton={defineButton}\n              buttonType={buttonType}\n              initialColor={boardColor}\n              instructions={instructions}\n              changeColor={changeColor}\n              changingColor={changingColor}\n            />\n          </div>\n          <div className=\"left\"></div>\n          <div className=\"right\"></div>\n          <div className=\"pickerstyle\">\n            <ColorPicker\n              text={\"Choose your Text Color\"}\n              defineColor={defineTextColor}\n              button={\"text\"}\n              defineButton={defineButton}\n              buttonType={buttonType}\n              initialColor={textColor}\n              defineRgbType={defineRgbType}\n              changeColor={changeColor}\n              changingColor={changingColor}\n            />\n          </div>\n          <div className=\"down\"></div>\n          {buttonType && (\n            <div className=\"hexaTab\">\n              <p className=\"aligntext\">Changing {buttonType} color.</p>\n              <p className=\"aligntext\">{textOfColor}</p>\n              <p className=\"hexadecimal\">\n                {buttonType === \"board\" ? boardColor : textColor}\n              </p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}